from array import *
from itertools import product
import numpy as np
import random
import time

total = 0
increments = 0

length = int(input("Value of n?"))
start = time.time()

dyckarray = []
newlowlengtharray = []

def solve(num, cache={0: ['']}):
  if num not in cache:
    cache[num] = ['U%sD%s' % t for i in range(1, num + 1)
      for t in product(solve(i - 1), solve(num - i))]
  return cache[num]

for s in solve(length):
  dyckarray.append(s)
print("Array of all Dyck paths of specified length (U = up, D = down)" + str(dyckarray))
print()

for string in dyckarray:
  print("The current string is: " + str(string))
  total = 0
  increments = 0
  average = 0
  newlowarray = []
  for i in range(len(string)):
    if(string[i] == 'U'):
      total += 1
      increments += 1
      print("Up")
      print("Running average is " + str(total/increments))
    elif(string[i] == 'D'):
      total -= 1
      increments += 1
      print("Down")
      print("Running average is " + str(total/increments))
    if increments >= 1:
      j = 0
      lowest = True
      while j < len(newlowarray):
        if newlowarray[j] <= total/increments:
          lowest = False
        j += 1
      if lowest == True:
        newlowarray.append(total/increments)
  print("Descending ladder indices of the sequence of averages: " + str(newlowarray)
  + " with length " + str(len(newlowarray)))
  newlowlengtharray.append(len(newlowarray))
  print()
print("List of numbers of illuminated points for Dyck paths of specified length: "
+ str(newlowlengtharray))
print("Mean number of illuminated points: " + str(np.mean(newlowlengtharray)))

end = time.time()
print(f"Runtime of the program is {end - start} seconds")
